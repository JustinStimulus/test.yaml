apiVersion: v1
kind: ConfigMap
metadata:
  name: agent-test-script
  namespace: stimulus-uat
data:
  test-agents.js: |
    async function testAgentLookup() {
      try {
        // Fetch agents from server
        const response = await fetch('https://srm-uat-agents.getstimulus.ai/assistants/search', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({})
        });
        
        if (!response.ok) {
          throw new Error(`Failed to fetch agents: ${response.status}`);
        }
        
        // Parse response
        const availableAgents = await response.json();
        console.log('Available agents:');
        availableAgents.slice(0, 3).forEach(agent => {
          console.log(`- ${agent.assistant_id} (graph_id: ${agent.graph_id})`);
        });
        
        // Define desired agents
        const desiredAgentTypes = [
          { graphId: 'vendor_interest_agent', description: 'Vendor Interest agent.' },
          { graphId: 'lbe_certification_agent', description: 'LBE Certification agent.' }
        ];
        
        // Find matching agents
        const matchedAgents = [];
        for (const desiredAgent of desiredAgentTypes) {
          // Try exact match by graph_id
          const match = availableAgents.find(a => 
            a.graph_id === desiredAgent.graphId
          );
          
          if (match) {
            matchedAgents.push({
              name: match.assistant_id,
              description: `${desiredAgent.description} (${match.graph_id})`,
            });
            console.log(`✅ Found match for ${desiredAgent.graphId}: ${match.assistant_id}`);
          } else {
            console.log(`❌ No match found for ${desiredAgent.graphId}`);
          }
        }
        
        console.log('Matched agents:', matchedAgents);
      } catch (error) {
        console.error('Error testing agent lookup:', error);
      }
    }

    testAgentLookup();
